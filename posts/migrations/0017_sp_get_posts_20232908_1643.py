# Generated by Django 4.1.7 on 2023-07-30 21:43

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('posts', '0016_insert_default_questions_20230911_2256'),
    ]

    operations = [
        migrations.RunSQL("""
            DROP PROCEDURE IF EXISTS sp_get_posts;

CREATE PROCEDURE `sp_get_posts`(IN _text VARCHAR(250),
						IN date_from DATE,
                        IN date_to DATE,
                        IN perpage INT,
                        IN npage INT,
                        IN order_by VARCHAR(255),
                        IN orden VARCHAR(4),
                        IN _business_id INT,
                        IN _client_id INT,
                        IN _user_id INT,
                        IN _status VARCHAR(50)
                        )
BEGIN
 DECLARE cc INT;

                SET npage=perpage*(npage-1);

                select count(*) into cc
                from posts_posts pp
				join businesses b on pp.business_id = b.id
				join clients c on b.client_id = c.id
                where pp.deleted_at is null
                and if(_business_id is null, true, pp.business_id = _business_id)
                and if(_client_id is null, true, b.client_id = _client_id)
                and if(_user_id is null, true, c.user_id = _user_id)
                and if(_status is null, true, pp.status like CONCAT('%',_status,'%'))
                AND IF(date_from IS NULL, TRUE,
                DATE(pp.created_at) >= date_from)
                AND IF(date_to IS NULL, TRUE,
                DATE(pp.created_at) <= date_to);

                select pp.id, ifnull(pp.content,"") content, pp.created_at,  pp.published_at,
                pp.image_url, pp.status, b.name business_name,
                cc cc,
                b.logo_carpet business_image,
                (select MAX(pp2.id) from posts_postsurvey pp2 where pp2.post_id = pp.id) last_survey_id
                from posts_posts pp
				join businesses b on pp.business_id = b.id
				join clients c on b.client_id = c.id
                where pp.deleted_at is null
                and if(_business_id is null, true, pp.business_id = _business_id)
                and if(_client_id is null, true, b.client_id = _client_id)
                and if(_user_id is null, true, c.user_id = _user_id)
                and if(_status is null, true, pp.status like CONCAT('%',_status,'%'))
                AND IF(date_from IS NULL, TRUE,
                DATE(pp.created_at) >= date_from)
                AND IF(date_to IS NULL, TRUE,
                DATE(pp.created_at) <= date_to)
                ORDER BY pp.created_at desc;
            END
        """)]
